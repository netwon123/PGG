ls ./*_f1.fq.gz | while read i;
do
i=${i/_f1.fq.gz/}
fastp -w 56 -i ${i}_f1.fq.gz -o ${i}_R1.clean.fq.gz -I ${i}_r2.fq.gz -O ${i}_R2.clean.fq.gz
done



ls ./*_R1.clean.fq.gz | while read i;
do
i=${i/_R1.clean.fq.gz/}
/public/software/arm/vg1.56/vg-v1.56.0/bin/vg giraffe --fragment-mean 200  --fragment-stdev 28 -t 96 -Z /public/home/baoqi/PGG/PGG.giraffe.gbz -m /public/home/baoqi/PGG/PGG.min -d /public/home/baoqi/PGG/PGG.dist  -f ${i}_R1.clean.fq.gz -f ${i}_R2.clean.fq.gz > ${i}-pan.gam
/public/software/arm/vg1.56/vg-v1.56.0/bin/vg pack -t 96 -x /public/home/baoqi/PGG/PGG.giraffe.gbz -g ${i}-pan.gam -o ${i}-pan.pack
/public/software/arm/vg1.56/vg-v1.56.0/bin/vg call -t 96 -r /public/home/baoqi/PGG/PGG.snarls -z  /public/home/baoqi/PGG/PGG.giraffe.gbz -a -k ${i}-pan.pack -s ${i} >${i}-pan.vcf
done

#split the mutil-allele
ls *gz | while read id;
do
bcftools norm --threads 16 -m -both $id -Oz -o ${id}.split.vcf.gz
done

#extract and annotate the sv
ls *split.vcf |while read id;do python ../extract_sv_len50.py $id > ${id}.indel50.vcf;done
ls *indel50.vcf | while read id;do bgzip -@ 16 $id;done
ls *gz | while read id; do tabix -f $id;done
ls *indel50.gz > sample.txt
bcftools merge -m none --threads 16 -l sample.txt  -Oz -o panel.gz

#soft-filter
python cal_av_dp.py #get the average depth
bcftools filter -i 'INFO/DP > avDP/3 & avDP*3 > INFO/DP' input.vcf.gz -o filtered.vcf


#Mergeing sv using Panpop
perl ~/software/panpop-main/bin/PART_run.pl --in_vcf 298merge_span_sv.vcf.gz -o OUTDIR_RUN1 -r ~/PGG_netwon/final_merge/backone_genome/backone.fa  -t 56 --tmpdir TMPDIR
perl ~/software/panpop-main/bin/PART_run.pl --in_vcf OUTDIR_RUN1/3.final.vcf.gz -o OUTDIR_RUN2 -r ~/PGG_netwon/final_merge/backone_genome/backone.fa  -t 56 --tmpdir TMPDIR -not_first_merge


#remove dupulacted sample (n=60)
vcftools --gzvcf 3.final.vcf.gz --recode --recode-INFO-all --stdout  --remove  dupsample.txt   > 3.final_3139.vcf.gz

#rename vcf
bcftools reheader -s tihuan2.txt 3.final_3139.vcf.gz -Oz -o 3.final_3139.rname.vcf.gz


#remove multiallelic site
vcftools --out 3.final_3139.biallel --min-alleles 2 --max-alleles 2 --gzvcf 3.final_3139.rname.vcf.gz --recode --recode-INFO-all

#remove divergent type
python 01_extract_sv_len50.py 3.final_3139.biallel.vcf > 3.final_3139.biallel.indel.vcf


#add info/AC

bcftools +fill-tags 3.final_3139.biallel.indel.vcf -o 3.final_3139.biallel.indel.ac.vcf -- -t AC

#extract 2337 samples and remove site with AC=0,1,2
bcftools view  -S sample_2337.list -e "AC==0 | AC==1 | AC==2"  3.final_3139.biallel.indel.ac.vcf  -o 3.final_3139.biallel.indel.filtedAC.vcf

#filted missing rate > 0.8
vcftools --max-missing 0.8 --recode-INFO-all --vcf 3.final_2337.biallel.indel.filtedAC.vcf  --out 3.final_2337.biallel.indel.filtedAC_fmiss08 --recode

#add SVTYPE
awk 'BEGIN {OFS="\t"} {if (length($4) > length($5)) $8=$8";SVTYPE=DEL"; else if (length($4) < length($5)) $8=$8";SVTYPE=INS"; print $0}' \
    bq_2337.genome.sv.filtered.recode.vcf > bq_2337.genome.sv.DEL_INS.vcf

#add SVLEN
awk 'BEGIN {OFS="\t"} {if (length($4) > length($5)) $8=$8";SVLEN="length($4); else if (length($4) < length($5)) $8=$8";SVLEN="length($5); print $0}'  2337.genome.sv.DEL_INS.vcf > 2337.genome.sv.DEL_INS.addlen.vcf
