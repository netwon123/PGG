#-----------------------pca------------------------
setwd('G:/博士/泛基因组组/PGG-project/analysis/pop_structure/')
library(ggplot2)
library(RColorBrewer)
library(patchwork)
display.brewer.all(type = "all")
pca <- read.table("PCA.txt",sep = "\t",header = T)
pcaw <- read.table("pca-west.txt",sep = "\t",header = T)

shapelist=c("EW"="#FFBE7A",
            "BKS"="#420516",
            "DRC"="#fc6076",
            "HAM"="#ff0844",
            "LDR"="#FA7F6F",
            "LW"="#faaca8",
            "PTR"="#B42B51",
            "AW"="#82B0D2",
            "AQ"="#c1dfc4",
            "BM"="#96CDCD",
            "BMA"="#668B8B",
            "GEH"="#92FFC0",
            "JH"="#00868B",
            "LC"="#7FFFD4",
            "LWU"="#8ECFC9",
            "MAS"="#66CDAA",
            "MS"="#C1FFC1",
            "MZ"="#9BCD9B",
            "RC"="#698B69",
            "TT"="#43CD80",
            "TUC"="#2E8B57",
            "WNH"="#BCEE68",
            "WZS"="#FFF68F")
color =c("#8ECFC9", "#82B0D2", "#FA7F6F", "#FFBE7A")
p1=ggplot(pca, aes(x=pca1,y=pca2,color=pop,shape = region)) +
  geom_point(size=7,alpha = 0.75)+
  labs(x="PC1(23.0582%)",y="PC2(8.6681%)")+theme_bw()+theme(legend.title = element_blank())+scale_color_manual(values = shapelist)+scale_shape_manual(values = c(15,17,16,18)) +theme(panel.grid=element_blank())+ theme_bw()+
  theme(axis.title = element_text(
    size=12, ##字体大小
    lineheight = 1),##标签行间距的倍数
    axis.text = element_text(size=10))

p2=ggplot(pcaw, aes(x=pca1,y=pca2,color=pop,shape = region)) +
  geom_point(size=7,alpha = 0.75)+
  theme_bw()+theme(legend.title = element_blank())+scale_color_manual(values = shapelist)+scale_shape_manual(values = c(16,18)) +theme(panel.grid=element_blank())+ theme_bw()+
  theme(axis.title = element_text(
    size=12, ##字体大小
    lineheight = 1),##标签行间距的倍数
    axis.text = element_text(size=10))+ theme(legend.position = "none")
p1+p2+plot_layout(nrow=1)

#---------------admixture------------------------------------
library(data.table)
library(itol.toolkit)
setwd('G:/博士/泛基因组组/PGG-project/analysis/pop_structure/structure/')
library(pophelper)
sfile = paste0("admix.",2:4,".Q")
slist <- readQ(sfile,indlabfromfile = T)

##draw by group
pop <- read.table("group3.txt",header = F,sep = "\t",stringsAsFactors = F,row.names = 1)
plotQ(slist,imgoutput = "join",imgtype = "pdf",height = 1.2,width = 20,clustercol=c("#8ECFC9", "#82B0D2", "#FA7F6F", "#FFBE7A"),indlabsize = 2,
      showindlab = T,useindlab = T,sharedindlab = T,
      showsp = T,sppos ="left",splab= paste0("K=",2:4),splabangle = 180,grplabalpha=0.75,sortind="label",
      showlegend = F,ordergrp = T,grplab = pop,
      
      outputfilename = paste0("admixture_barplot_pop"),units = "cm",
      exportpath = getwd())

#culumative line


setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
df<-read.table("cultimate2.txt",header = TRUE)


ggplot(df, aes( x=samples, y = num)) +theme_bw()+ geom_smooth(se = FALSE,color='#FA7F6F',size=2) +
  xlab("Samples") + ylab("Cumulative unique SVs") 
  
  
  

#-----堆叠图

library(ggplot2)

library(dplyr)
library(RColorBrewer)
 co =c('#BEB8DC',"#8ECFC9", "#FA7F6F","#82B0D2", "#FFBE7A")
 df <- read.table('duidie.txt',header = T)
 head(df)
 data<-melt(df,id.vars='name')
 head(data)
 # Calculate the total sum for each 'name'
 data_sum <- data %>%
   group_by(name) %>%
   summarise(total = sum(value)) %>%
   arrange(desc(total)) %>%
   pull(name)
 
 # Reorder the 'name' factor based on the total sum
 data$name <- factor(data$name, levels = data_sum)
 
 # Create the stacked bar chart
 ggplot(data, aes(x = name, y = value, fill = variable)) +
   geom_bar(position = "stack", stat="identity", color = 'white', alpha = 0.75, width = 1) +
   scale_y_continuous(labels = scales::comma, expand = c(0,0)) +scale_fill_manual(values = co)+
     theme_+theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,size = 3.5)) +
    ylab("Count")
 
#-----------------svlen--------------
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
library(ggplot2)
data_plot <- read.table("stats_pop.txt",sep = "\t",header = T)
data=data_plot[data_plot$SVTYPE!='BND',]
data$SVLEN <- as.numeric(unlist(data$SVLEN))
color =c("", "", "", "")
ggplot(data, aes(x=SVLEN, color = SVTYPE)) +
  geom_freqpoly(binwidth=0.5, size=2) +  
  scale_x_continuous(trans = 'log10',
                     breaks=c(100,1000,10000,100000,1000000),
                     labels =c('100bp','1Kb','10Kb','100Kb','1Mb'),
                     limits = c(50, 500000)
  ) + 
  scale_y_continuous(trans = 'log10') + 
  theme_bw() +
  theme(legend.title=element_blank(),
        legend.position=c(0.9,0.85)) + 
  scale_color_manual(values = c("INS" = "#8ECFC9", "INV" = "#82B0D2", "DEL" = "#FA7F6F",'DUP'='#FFBE7A'))  + theme(panel.grid = element_blank())+
  xlab('') + 
  ylab("SV Count")

#----------4type-----------
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
library(ggplot2)
data<-read.table("stats_pop.txt",sep="\t",header=T)
data$group <- ifelse(data$AF == 1, "Shared", ifelse(data$AF >= 0.5 & data$AF < 1, "Major", ifelse(data$AF >= 1/203 & data$AF < 0.5,'Polymorphic','Singleton')))
data_sv_group <- plyr::count(data,c('SVTYPE','group'))
data_sv_group$SVTYPE <- factor(data_sv_group$SVTYPE)
data_sv_group$label <- 0

for (type_sv in levels(data_sv_group$SVTYPE)){
  data_sv_group[data_sv_group$SVTYPE==type_sv,]$label <- sum(data_sv_group[data_sv_group$SVTYPE==type_sv,]$freq)
}
data_sv_group$SVTYPE <- factor(data_sv_group$SVTYPE, levels = c( 'DEL', 'INS', 'DUP', 'INV', 'BND'))

ggplot(data_sv_group, aes(x = SVTYPE, y = freq, fill = group)) + 
  geom_bar(position = "fill",stat = "identity",alpha=0.75) +
  scale_y_continuous() + 
  coord_flip() + 
  theme_classic()+
  theme(legend.title=element_blank(),
        legend.position="bottom",
        legend.key.size=unit(1, 'cm')) +
  scale_fill_manual(values  =c("#FFBE7A","#8ECFC9", "#82B0D2", "#FA7F6F",'red')) + 
  xlab("") + 
  ylab("")+theme(panel.grid=element_blank())

