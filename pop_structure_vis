#-----------------------pca------------------------
setwd('G:/博士/泛基因组组/PGG-project/analysis/pop_structure/')
library(ggplot2)
library(RColorBrewer)
library(patchwork)
display.brewer.all(type = "all")
pca <- read.table("PCA.txt",sep = "\t",header = T)
pcaw <- read.table("pca-west.txt",sep = "\t",header = T)

shapelist=c("EW"="#FFBE7A",
            "BKS"="#420516",
            "DRC"="#fc6076",
            "HAM"="#ff0844",
            "LDR"="#FA7F6F",
            "LW"="#faaca8",
            "PTR"="#B42B51",
            "AW"="#82B0D2",
            "AQ"="#c1dfc4",
            "BM"="#96CDCD",
            "BMA"="#668B8B",
            "GEH"="#92FFC0",
            "JH"="#00868B",
            "LC"="#7FFFD4",
            "LWU"="#8ECFC9",
            "MAS"="#66CDAA",
            "MS"="#C1FFC1",
            "MZ"="#9BCD9B",
            "RC"="#698B69",
            "TT"="#43CD80",
            "TUC"="#2E8B57",
            "WNH"="#BCEE68",
            "WZS"="#FFF68F")
color =c("#8ECFC9", "#82B0D2", "#FA7F6F", "#FFBE7A")
p1=ggplot(pca, aes(x=pca1,y=pca2,color=pop,shape = region)) +
  geom_point(size=7,alpha = 0.75)+
  labs(x="PC1(23.0582%)",y="PC2(8.6681%)")+theme_bw()+theme(legend.title = element_blank())+scale_color_manual(values = shapelist)+scale_shape_manual(values = c(15,17,16,18)) +theme(panel.grid=element_blank())+ theme_bw()+
  theme(axis.title = element_text(
    size=12, ##字体大小
    lineheight = 1),##标签行间距的倍数
    axis.text = element_text(size=10))

p2=ggplot(pcaw, aes(x=pca1,y=pca2,color=pop,shape = region)) +
  geom_point(size=7,alpha = 0.75)+
  theme_bw()+theme(legend.title = element_blank())+scale_color_manual(values = shapelist)+scale_shape_manual(values = c(16,18)) +theme(panel.grid=element_blank())+ theme_bw()+
  theme(axis.title = element_text(
    size=12, ##字体大小
    lineheight = 1),##标签行间距的倍数
    axis.text = element_text(size=10))+ theme(legend.position = "none")
p1+p2+plot_layout(nrow=1)

#---------------admixture------------------------------------
library(data.table)
library(itol.toolkit)
setwd('G:/博士/泛基因组组/PGG-project/analysis/pop_structure/structure/')
library(pophelper)
sfile = paste0("admix.",2:4,".Q")
slist <- readQ(sfile,indlabfromfile = T)

##draw by group
op <- read.table("group.txt",header = F,sep = "\t",stringsAsFactors = F,row.names = 1)
plotQ(slist,imgoutput = "sep",imgtype = "pdf",height = 2,width = 20,indlabsize = 2,
showindlab = T,useindlab = T,sharedindlab = T,clustercol=co,
showsp = T,sppos ="left",splab= paste0("K=",13),splabangle = 180,sortind="label",
showlegend = F,ordergrp = T,grplab = pop,
outputfilename = paste0("13"),units = "cm",
exportpath = getwd())
co=c(
"#c1dfc4",
"#BBFFFF",
"#8ECFC9",
"#66CDAA",
"#C1FFC1",
"#B42B51",
"#698B69",
"#BCEE68",
"#FA7F6F",
"#FF6A6A",
"#2E8B57",
"#96CDCD","#43CD80")
color =c("#8ECFC9", "#82B0D2", "#FA7F6F", "#FFF68F")
##draw by group
pop <- read.table("group.txt",header = F,sep = "\t",stringsAsFactors = F,row.names = 1)
plotQ(slist,imgoutput = "sep",imgtype = "pdf",height = 2,width = 20,indlabsize = 2,
showindlab = T,useindlab = T,sharedindlab = T,clustercol=co,
showsp = T,sppos ="left",splab= paste0("K=",13),splabangle = 180,sortind="label",
showlegend = F,ordergrp = T,grplab = pop,
outputfilename = paste0("13"),units = "cm",
exportpath = getwd())


#culumative line


setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
df<-read.table("cultimate2.txt",header = TRUE)


ggplot(df, aes( x=samples, y = num)) +theme_bw()+ geom_smooth(se = FALSE,color='#FA7F6F',size=2) +
  xlab("Samples") + ylab("Cumulative unique SVs") 
  
  
  

#-----堆叠图

library(ggplot2)
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/SV_num/')
library(dplyr)
library(reshape2)
library(RColorBrewer)
co =c('#BEB8DC',"#8ECFC9", "#FA7F6F","#82B0D2", "#FFBE7A")

df <- read.table('sv_count.txt', header = TRUE)

# 读取分组文件
groups <- read.table('group.txt', header = TRUE)

# 合并数据和分组信息
df <- merge(df, groups, by = 'sample')

# Melt the data
data <- melt(df, id.vars = c('sample', 'group'))

# Calculate the total sum for each 'name' within each group
data_sum <- data %>%
  group_by(group, sample) %>%
  summarise(total = sum(value)) %>%
  arrange(group, desc(total)) %>%
  pull(sample)

# Reorder the 'sample' factor based on the total sum within each group
#data$sample <- factor(data$sample, levels = data_sum)

# Create the grouped stacked bar chart with group separation
ggplot(data, aes(x = sample, y = value, fill = variable)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +
  scale_fill_manual(values = co) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 3.5),
        panel.spacing = unit(2, "lines")) +  # Adjust the spacing between panels
  facet_grid(. ~ group, scales = 'free_x', space = 'free_x', switch = 'x') +
  ylab("Count")

#-----pie-----------

ratio <- c(0.019490172,0.333702986,0.58390927,0.031258595,0.031638977)
disease <- c('INV','DEL','INS','DUP','TRA')
co =c('#BEB8DC', "#FA7F6F","#8ECFC9", "#82B0D2","#FFBE7A")
pie(ratio, labels=disease,
    radius = 1.0,clockwise=T,col = co,border = NA,
    main = "Male individuals")



#-----------------svlen--------------
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
library(ggplot2)
data_plot <- read.table("stats_pop.txt",sep = "\t",header = T)
data=data_plot[data_plot$SVTYPE!='BND',]
data$SVLEN <- as.numeric(unlist(data$SVLEN))
color =c("", "", "", "")
ggplot(data, aes(x=SVLEN, color = SVTYPE)) +
  geom_freqpoly(binwidth=0.5, size=2) +  
  scale_x_continuous(trans = 'log10',
                     breaks=c(100,1000,10000,100000,1000000),
                     labels =c('100bp','1Kb','10Kb','100Kb','1Mb'),
                     limits = c(50, 500000)
  ) + 
  scale_y_continuous(trans = 'log10') + 
  theme_bw() +
  theme(legend.title=element_blank(),
        legend.position=c(0.9,0.85)) + 
  scale_color_manual(values = c("INS" = "#8ECFC9", "INV" = "#82B0D2", "DEL" = "#FA7F6F",'DUP'='#FFBE7A'))  + theme(panel.grid = element_blank())+
  xlab('') + 
  ylab("SV Count")

#----------4type-----------
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/')
library(ggplot2)
data<-read.table("stats_pop.txt",sep="\t",header=T)
data$group <- ifelse(data$AF == 1, "Shared", ifelse(data$AF >= 0.5 & data$AF < 1, "Major", ifelse(data$AF >= 1/203 & data$AF < 0.5,'Polymorphic','Singleton')))
data_sv_group <- plyr::count(data,c('SVTYPE','group'))
data_sv_group$SVTYPE <- factor(data_sv_group$SVTYPE)
data_sv_group$label <- 0

for (type_sv in levels(data_sv_group$SVTYPE)){
  data_sv_group[data_sv_group$SVTYPE==type_sv,]$label <- sum(data_sv_group[data_sv_group$SVTYPE==type_sv,]$freq)
}
data_sv_group$SVTYPE <- factor(data_sv_group$SVTYPE, levels = c( 'DEL', 'INS', 'DUP', 'INV', 'BND'))

ggplot(data_sv_group, aes(x = SVTYPE, y = freq, fill = group)) + 
  geom_bar(position = "fill",stat = "identity",alpha=0.75) +
  scale_y_continuous() + 
  coord_flip() + 
  theme_classic()+
  theme(legend.title=element_blank(),
        legend.position="bottom",
        legend.key.size=unit(1, 'cm')) +
  scale_fill_manual(values  =c("#FFBE7A","#8ECFC9", "#82B0D2", "#FA7F6F",'red')) + 
  xlab("") + 
  ylab("")+theme(panel.grid=element_blank())

#----sv num cumulation---------
df <- read.table('cu.txt', header = TRUE)
ggplot(data = df, aes(x = sample, y = num)) + geom_point(colour='#E7DAD2',position = "jitter",size=3)+
  geom_smooth(method = "loess", se = TRUE, span = 0.3, color = "#FA7F6F",size=1.5) +theme_classic()

#--------shared-nonredundant----------------------

df <- read.table('share-nored.txt', header = TRUE)


data<-melt(df,id.vars='sample')
head(data)
# Calculate the total sum for each 'name'
data_sum <- data %>%
  group_by(sample) %>%
  summarise(total = sum(value)) %>%
  pull(sample)
# Reorder the 'name' factor based on the total sum
data <- data[order(data$variable), ]
data$name <- factor(data$sample, levels = data_sum)
# Create the stacked bar chart

ggplot(data, aes(x = name, y = value, fill = variable)) +
  geom_bar(position = "stack", stat="identity") +
  scale_y_continuous(labels = scales::comma, expand = c(0,0)) +scale_fill_manual(values = co)+
  theme_classic()+theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,size = 4)) +
  ylab("Count")


#--------sv_repeat----------
stat1 <- read.csv('sv_repeat.bed', stringsAsFactors = FALSE,sep = '\t')
library(ggplot2)
df <- read.table('anno2.txt', header = TRUE)
df$TYPE <- factor(df$TYPE, levels = c("Low_complexity", "Simple_repeat", "Satellite",'SINE','LINE','LTR','DNA','RNA','RC','None'))

co =c('#E7DAD2',"#82B0D2", "#FFBE7A","#FA7F6F", "#8ECFC9","#BBFFFF","#43CD80","#C1FFC1","#c1dfc4",'#bdbdbd')
ggplot(data=df, aes(x=abs(SVLEN), fill = TYPE)) +
  geom_histogram() + 
  scale_x_continuous(trans = 'log10',breaks = c(100,300,2000,6000,100000),
                     labels = c('100bp','300bp','2kb','6kb','100kb'),limits = c(50,100000)) + 
  theme_classic()+scale_fill_manual(values = co)

#-------sv af--------------

ggplot(data=data, aes(x=AF,fill=SVTYPE)) +
  geom_histogram(bins=100) +
  theme_classic()+scale_fill_manual(values=c("INS" = "#8ECFC9", "INV" = "#82B0D2", "DEL" = "#FA7F6F",'DUP'='#FFBE7A','BND'='#BEB8DC')) +xlab('AF') + 
  ylab("SV Count") +scale_y_continuous(trans = 'log10')


ggplot(data=stat1, aes(x=abs(SVLEN), fill = TYPE)) +
  geom_histogram(bins = 100)+scale_fill_manual(values=co)+theme_classic()+ scale_y_continuous(trans = 'log10')

#enrich
setwd('G:/博士/泛基因组组/PGG-project/analysis/SV stats/SV_repeat/SVxTE-length/')

library(ggplot2)
data <- read.table('repeat.txt',header = TRUE)
# 绘制条形图

  
co=c(
"#FFBE7A"
,"#420516"
,"#fc6076"
,"#ff0844"
,"#FA7F6F"
,"#faaca8"
,"#B42B51"
,"#82B0D2"
,"#c1dfc4"
,"#96CDCD"
,"#668B8B"
,"#92FFC0"
,"#00868B"
,"#7FFFD4"
,"#8ECFC9"
,"#66CDAA"
,"#C1FFC1"
,"#9BCD9B"
,"#698B69"
,"#43CD80"
,"#2E8B57"
,"#BCEE68")             
                                         




ggplot(data, aes(x = type, y = fc, fill = type)) +
  geom_bar(stat = "identity",color = "black") +
  labs( y = "LOG2(FC)") +
  theme_classic()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+scale_fill_manual(values=co)+theme(legend.position = "none")+
 geom_text(aes(label = "*"),  size = 6)



data <- read.table('chrom.txt',header = TRUE)
data$type <- factor(data$type, levels = c("E1_TssA", "E2_TssAHet", "E3_TxFlnk",'E4_TxFlnkWk','E5_TxFlnkHet','E6_EnhA','E7_EnhAMe','E9_EnhAHet','E10_EnhPois','E11_ATAC_Is','E12_TssBiv','E13_Repr','E14_ReprWk'))

co=c(
  "#c1dfc4",
  "#BBFFFF",
  "#8ECFC9",
  "#66CDAA",
  "#C1FFC1",
  "#B42B51",
  "#698B69",
  "#BCEE68",
  "#FA7F6F",
  "#FF6A6A",
  "#2E8B57",
  "#96CDCD","#43CD80")

ggplot(data, aes(x = type, y = fc, fill = type)) +
  geom_bar(stat = "identity",color = "black") +
  labs( y = "LOG2(FC)") +
  theme_classic()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+scale_fill_manual(values=co)+theme(legend.position = "none")+
  geom_text(aes(label = "*"),  size = 6)
#---bubble
ggplot(data, aes(x=description, y=oddsRatio, color = description,size=qvalue)) +
  geom_point(shape = 16,size=5)+ 
  labs( y = "LOG2(FC)")+
  theme_classic()+
 theme(legend.position = 'None')+scale_color_manual(values = colors)+xlab('')+
  coord_flip()
